Josh has discovered several different alien languages. Suprisingly all of these languages have an alphabet, and each of them may contain thousands of characters! Also all words in a language have the same number of characters in it.

However, these aliens enjoy having their words be asthetically pleasing, which for them means that all words have the requirement that for the ith letter of an n letter alphabet (letters are indexed at 1):

if 2*i > n

the ith letter may be the last letter of a word, and it may be followed by any letter including itself.

if 2*i ≤ n

the ith letter can not be the last letter of a word and also can only be followed by jth lette iff j ≥ 2*i.

Josh wants to know how many different words there can be in this language. Since the result may be large, he wants it modulo 100000007.

Input

The first line contains t, the number of test cases. The is followed by t lines, each line denoting a test case. Each test case will have two space seperated integers n,m which denote the number of letters in the language and the length of words in this language respectively.

Output

For each testcase output on its own line the number of possible words modulo 100000007.

Constraints

1 ≤ t ≤ 5
1 ≤ n ≤ 105
1 ≤ m ≤ 5*105

Sample Input

3
1 3
2 3
3 2

Sample Output

1
3
6

Explanation
For the first test-case, there’s one letter and all the words consist of 3 letters. There’s only one possibility which is “aaa”

For the second test-case, there are two letters (a & b) and all of the words are 3 letters. The possible ones are “abb”, “bab”, & “bbb”. The words can end only with ‘b’ since 2 * index(b) = 2 * 2 > 2 and for ‘a’, it’s 2 * index(a) = 2 * 1 <= 2.

For the third test-case, there are three letters (a, b & c) and all of the words are 2 letters. The words can end only with ‘b’ or ‘c’. The possible words are “ab”, “ac”, “bb”, “cc”, “bc”, “cb”